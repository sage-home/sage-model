# parameters.yaml
# Central parameter definitions for SAGE model
# This file drives auto-generation of parameter accessors, similar to properties.yaml
# 
# Each parameter definition includes:
# - name: Parameter name as it appears in .par files
# - type: Data type (string, int, double, bool)
# - description: Human-readable description
# - category: core or physics
# - required: Whether parameter must be present in .par file
# - bounds: [min, max] for numeric types (optional)
# - default_value: Default value if not specified (optional)
# - struct_field: Target field in struct params (for mapping)

parameters:
  # Core I/O parameters - always required regardless of physics modules
  core:
    io:
      - name: "FileNameGalaxies"
        type: string
        description: "Base name for galaxy output files"
        category: core
        required: true
        struct_field: "io.FileNameGalaxies"
        
      - name: "OutputDir"
        type: string
        description: "Directory for output files"
        category: core
        required: true
        struct_field: "io.OutputDir"
        
      - name: "TreeType"
        type: string
        description: "Type of merger tree format"
        category: core
        required: true
        struct_field: "io.TreeType"
        enum_type: true
        enum_values: ["lhalo_hdf5", "lhalo_binary", "genesis_hdf5", "consistent_trees_ascii", "consistent_trees_hdf5", "gadget4_hdf5"]
        
      - name: "TreeName"
        type: string
        description: "Base name for tree files"
        category: core
        required: true
        struct_field: "io.TreeName"
        
      - name: "SimulationDir"
        type: string
        description: "Directory containing simulation tree files"
        category: core
        required: true
        struct_field: "io.SimulationDir"
        
      - name: "FileWithSnapList"
        type: string
        description: "File containing snapshot scale factors"
        category: core
        required: true
        struct_field: "io.FileWithSnapList"
        
      - name: "FirstFile"
        type: int
        description: "First tree file number to process"
        category: core
        required: true
        bounds: [0, 99999]
        struct_field: "io.FirstFile"
        
      - name: "LastFile"
        type: int
        description: "Last tree file number to process"
        category: core
        required: true
        bounds: [0, 99999]
        struct_field: "io.LastFile"
        
      - name: "NumSimulationTreeFiles"
        type: int
        description: "Total number of tree files in simulation"
        category: core
        required: true
        bounds: [1, 99999]
        struct_field: "io.NumSimulationTreeFiles"

    simulation:
      - name: "LastSnapshotNr"
        type: int
        description: "Last snapshot number to process"
        category: core
        required: true
        bounds: [0, 999]
        struct_field: "simulation.LastSnapshotNr"
        
      - name: "NumOutputs"
        type: int
        description: "Number of snapshot outputs (-1 for all)"
        category: core
        required: true
        bounds: [-1, 999]
        struct_field: "simulation.NumSnapOutputs"

    cosmology:
      - name: "Hubble_h"
        type: double
        description: "Dimensionless Hubble parameter"
        category: core
        required: true
        bounds: [0.1, 1.0]
        struct_field: "cosmology.Hubble_h"
        
      - name: "Omega"
        type: double
        description: "Matter density parameter"
        category: core
        required: true
        bounds: [0.0, 1.0]
        struct_field: "cosmology.Omega"
        
      - name: "OmegaLambda"
        type: double
        description: "Dark energy density parameter"
        category: core
        required: true
        bounds: [0.0, 1.0]
        struct_field: "cosmology.OmegaLambda"
        
      - name: "PartMass"
        type: double
        description: "Dark matter particle mass"
        category: core
        required: true
        bounds: [0.0, 1000.0]
        units: "10^10 Msun/h"
        struct_field: "cosmology.PartMass"
        
      - name: "BoxSize"
        type: double
        description: "Simulation box size"
        category: core
        required: true
        bounds: [1.0, 10000.0]
        units: "Mpc/h"
        struct_field: "cosmology.BoxSize"

    units:
      - name: "UnitVelocity_in_cm_per_s"
        type: double
        description: "Unit velocity in cm/s"
        category: core
        required: true
        bounds: [1.0, 1e10]
        struct_field: "units.UnitVelocity_in_cm_per_s"
        
      - name: "UnitLength_in_cm"
        type: double
        description: "Unit length in cm"
        category: core
        required: true
        bounds: [1.0, 1e30]
        struct_field: "units.UnitLength_in_cm"
        
      - name: "UnitMass_in_g"
        type: double
        description: "Unit mass in grams"
        category: core
        required: true
        bounds: [1.0, 1e50]
        struct_field: "units.UnitMass_in_g"

    runtime:
      - name: "ForestDistributionScheme"
        type: string
        description: "Scheme for distributing forests over MPI tasks"
        category: core
        required: true
        struct_field: "runtime.ForestDistributionScheme"
        enum_type: true
        enum_values: ["uniform_in_forests", "linear_in_nhalos", "quadratic_in_nhalos", "exponent_in_nhalos", "generic_power_in_nhalos"]
        
      - name: "ExponentForestDistributionScheme"
        type: double
        description: "Exponent for forest distribution scheme"
        category: core
        required: true
        bounds: [0.0, 10.0]
        struct_field: "runtime.Exponent_Forest_Dist_Scheme"
        
      - name: "EnableMemoryMapping"
        type: int
        description: "Enable memory mapping for I/O operations"
        category: core
        required: false
        bounds: [0, 1]
        default_value: 0
        struct_field: "runtime.EnableMemoryMapping"
        
      - name: "EnableGalaxyMemoryPool"
        type: int
        description: "Enable galaxy memory pool optimization"
        category: core
        required: false
        bounds: [0, 1]
        default_value: 1
        struct_field: "runtime.EnableGalaxyMemoryPool"

  # Physics parameters - available for physics modules to use
  physics:
    flags:
      - name: "SFprescription"
        type: int
        description: "Star formation prescription"
        category: physics
        required: false
        bounds: [0, 10]
        default_value: 0
        struct_field: "physics.SFprescription"
        
      - name: "AGNrecipeOn"
        type: int
        description: "AGN feedback recipe flag"
        category: physics
        required: false
        bounds: [0, 5]
        default_value: 2
        struct_field: "physics.AGNrecipeOn"
        
      - name: "SupernovaRecipeOn"
        type: int
        description: "Supernova feedback flag"
        category: physics
        required: false
        bounds: [0, 1]
        default_value: 1
        struct_field: "physics.SupernovaRecipeOn"
        
      - name: "ReionizationOn"
        type: int
        description: "Reionization flag"
        category: physics
        required: false
        bounds: [0, 1]
        default_value: 1
        struct_field: "physics.ReionizationOn"
        
      - name: "DiskInstabilityOn"
        type: int
        description: "Disk instability flag"
        category: physics
        required: false
        bounds: [0, 1]
        default_value: 1
        struct_field: "physics.DiskInstabilityOn"

    general:
      - name: "BaryonFrac"
        type: double
        description: "Cosmic baryon fraction"
        category: physics
        required: false
        bounds: [0.0, 1.0]
        default_value: 0.17
        struct_field: "physics.BaryonFrac"
        
      - name: "RecycleFraction"
        type: double
        description: "Fraction of stellar mass recycled"
        category: physics
        required: false
        bounds: [0.0, 1.0]
        default_value: 0.43
        struct_field: "physics.RecycleFraction"
        
      - name: "Yield"
        type: double
        description: "Chemical yield from stars"
        category: physics
        required: false
        bounds: [0.0, 1.0]
        default_value: 0.025
        struct_field: "physics.Yield"
        
      - name: "FracZleaveDisk"
        type: double
        description: "Fraction of metals ejected from disk"
        category: physics
        required: false
        bounds: [0.0, 1.0]
        default_value: 0.0
        struct_field: "physics.FracZleaveDisk"

    mergers:
      - name: "ThreshMajorMerger"
        type: double
        description: "Mass ratio threshold for major mergers"
        category: physics
        required: false
        bounds: [0.0, 1.0]
        default_value: 0.3
        struct_field: "physics.ThreshMajorMerger"
        
      - name: "ThresholdSatDisruption"
        type: double
        description: "Threshold for satellite disruption"
        category: physics
        required: false
        bounds: [0.0, 10.0]
        default_value: 1.0
        struct_field: "physics.ThresholdSatDisruption"

    gas_physics:
      - name: "ReIncorporationFactor"
        type: double
        description: "Gas reincorporation efficiency"
        category: physics
        required: false
        bounds: [0.0, 10.0]
        default_value: 0.15
        struct_field: "physics.ReIncorporationFactor"

    star_formation:
      - name: "SfrEfficiency"
        type: double
        description: "Star formation efficiency"
        category: physics
        required: false
        bounds: [0.0, 1.0]
        default_value: 0.05
        struct_field: "physics.SfrEfficiency"

    feedback:
      - name: "FeedbackReheatingEpsilon"
        type: double
        description: "Supernova reheating efficiency"
        category: physics
        required: false
        bounds: [0.0, 10.0]
        default_value: 3.0
        struct_field: "physics.FeedbackReheatingEpsilon"
        
      - name: "FeedbackEjectionEfficiency"
        type: double
        description: "Supernova ejection efficiency"
        category: physics
        required: false
        bounds: [0.0, 1.0]
        default_value: 0.3
        struct_field: "physics.FeedbackEjectionEfficiency"

    black_holes:
      - name: "BlackHoleGrowthRate"
        type: double
        description: "Black hole growth rate parameter"
        category: physics
        required: false
        bounds: [0.0, 1.0]
        default_value: 0.015
        struct_field: "physics.BlackHoleGrowthRate"
        
      - name: "RadioModeEfficiency"
        type: double
        description: "Radio mode feedback efficiency"
        category: physics
        required: false
        bounds: [0.0, 1.0]
        default_value: 0.08
        struct_field: "physics.RadioModeEfficiency"
        
      - name: "QuasarModeEfficiency"
        type: double
        description: "Quasar mode feedback efficiency"
        category: physics
        required: false
        bounds: [0.0, 1.0]
        default_value: 0.005
        struct_field: "physics.QuasarModeEfficiency"

    reionization:
      - name: "Reionization_z0"
        type: double
        description: "Reionization redshift parameter z0"
        category: physics
        required: false
        bounds: [0.0, 20.0]
        default_value: 8.0
        struct_field: "physics.Reionization_z0"
        
      - name: "Reionization_zr"
        type: double
        description: "Reionization redshift parameter zr"
        category: physics
        required: false
        bounds: [0.0, 20.0]
        default_value: 7.0
        struct_field: "physics.Reionization_zr"

    supernovae:
      - name: "EnergySN"
        type: double
        description: "Energy per supernova"
        category: physics
        required: false
        bounds: [1e48, 1e54]
        default_value: 1.0e51
        units: "ergs"
        struct_field: "physics.EnergySN"
        
      - name: "EtaSN"
        type: double
        description: "Supernova efficiency"
        category: physics
        required: false
        bounds: [0.0, 1.0]
        default_value: 5.0e-3
        struct_field: "physics.EtaSN"