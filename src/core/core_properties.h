/**
 * @file core_properties.h
 * @brief Auto-generated property definitions for SAGE model
 *
 * This file is automatically generated from properties.yaml by
 * generate_property_headers.py. DO NOT EDIT DIRECTLY.
 *
 * Generated on: 2025-05-01 19:33:22
 */

#ifndef CORE_PROPERTIES_H
#define CORE_PROPERTIES_H

#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <stdbool.h>

/* STEPS is defined in macros.h */

/* Property types and metadata */

/**
 * @brief Property ID enumeration used by core system
 */
typedef enum {
    PROP_SnapNum,
    PROP_Type,
    PROP_GalaxyNr,
    PROP_CentralGal,
    PROP_HaloNr,
    PROP_MostBoundID,
    PROP_GalaxyIndex,
    PROP_CentralGalaxyIndex,
    PROP_mergeType,
    PROP_mergeIntoID,
    PROP_mergeIntoSnapNum,
    PROP_dT,
    PROP_Pos,
    PROP_Vel,
    PROP_Len,
    PROP_Mvir,
    PROP_deltaMvir,
    PROP_CentralMvir,
    PROP_Rvir,
    PROP_Vvir,
    PROP_Vmax,
    PROP_ColdGas,
    PROP_StellarMass,
    PROP_BulgeMass,
    PROP_HotGas,
    PROP_EjectedMass,
    PROP_BlackHoleMass,
    PROP_ICS,
    PROP_MetalsColdGas,
    PROP_MetalsStellarMass,
    PROP_MetalsBulgeMass,
    PROP_MetalsHotGas,
    PROP_MetalsEjectedMass,
    PROP_MetalsICS,
    PROP_SfrDisk,
    PROP_SfrBulge,
    PROP_SfrDiskColdGas,
    PROP_SfrDiskColdGasMetals,
    PROP_SfrBulgeColdGas,
    PROP_SfrBulgeColdGasMetals,
    PROP_StarFormationHistory,
    PROP_DiskScaleRadius,
    PROP_MergTime,
    PROP_Cooling,
    PROP_Heating,
    PROP_r_heat,
    PROP_QuasarModeBHaccretionMass,
    PROP_TimeOfLastMajorMerger,
    PROP_TimeOfLastMinorMerger,
    PROP_OutflowRate,
    PROP_TotalSatelliteBaryons,
    PROP_infallMvir,
    PROP_infallVvir,
    PROP_infallVmax,
    PROP_COUNT  /* Total number of properties */
} property_id_t;

/**
 * @brief Property metadata structure
 */
typedef struct {
    const char *name;
    const char *type;
    const char *units;
    const char *description;
    bool output;
    int read_only;  /* 0=false, 1=true, 2=after_first_set */
    bool is_array;
    int array_dimension;
    const char *size_parameter;
} property_meta_t;

/**
 * @brief Core galaxy property storage structure
 * This structure holds all the galaxy properties but is not
 * directly accessed. All access occurs through the generated macros.
 */
typedef struct {
    int32_t SnapNum;
    int32_t Type;
    int32_t GalaxyNr;
    int32_t CentralGal;
    int32_t HaloNr;
    long long MostBoundID;
    uint64_t GalaxyIndex;
    uint64_t CentralGalaxyIndex;
    int32_t mergeType;
    int32_t mergeIntoID;
    int32_t mergeIntoSnapNum;
    float dT;
    float Pos[3];
    float Vel[3];
    int Len;
    float Mvir;
    float deltaMvir;
    float CentralMvir;
    float Rvir;
    float Vvir;
    float Vmax;
    float ColdGas;
    float StellarMass;
    float BulgeMass;
    float HotGas;
    float EjectedMass;
    float BlackHoleMass;
    float ICS;
    float MetalsColdGas;
    float MetalsStellarMass;
    float MetalsBulgeMass;
    float MetalsHotGas;
    float MetalsEjectedMass;
    float MetalsICS;
    float SfrDisk[STEPS];
    float SfrBulge[STEPS];
    float SfrDiskColdGas[STEPS];
    float SfrDiskColdGasMetals[STEPS];
    float SfrBulgeColdGas[STEPS];
    float SfrBulgeColdGasMetals[STEPS];
    float *StarFormationHistory;
    int StarFormationHistory_size;
    float DiskScaleRadius;
    float MergTime;
    double Cooling;
    double Heating;
    float r_heat;
    float QuasarModeBHaccretionMass;
    float TimeOfLastMajorMerger;
    float TimeOfLastMinorMerger;
    float OutflowRate;
    float TotalSatelliteBaryons;
    float infallMvir;
    float infallVvir;
    float infallVmax;
} galaxy_properties_t;

/* Metadata array (accessible by property_id_t) */
extern property_meta_t PROPERTY_META[PROP_COUNT];

/* Forward declarations for property system */
struct GALAXY;

/* Property system functions */

/**
 * @brief Initialize the property system
 * @return 0 on success, non-zero on failure
 */
int initialize_property_system(void);

/**
 * @brief Clean up the property system resources
 */
void cleanup_property_system(void);

/**
 * @brief Allocate property memory for a galaxy
 * @param g Galaxy pointer
 * @return 0 on success, non-zero on failure
 */
int allocate_galaxy_properties(struct GALAXY *g);

/**
 * @brief Free property memory for a galaxy
 * @param g Galaxy pointer
 */
void free_galaxy_properties(struct GALAXY *g);

/**
 * @brief Copy all properties from source galaxy to destination galaxy
 * @param dest Destination galaxy
 * @param src Source galaxy
 * @return 0 on success, non-zero on failure
 */
int copy_galaxy_properties(struct GALAXY *dest, const struct GALAXY *src);

/**
 * @brief Reset properties to initial values
 * @param g Galaxy pointer
 */
void reset_galaxy_properties(struct GALAXY *g);

/**
 * @brief Get property name string for a property ID
 * @param id Property ID
 * @return Property name string or NULL if ID is invalid
 */
const char* get_property_name(property_id_t id);

/**
 * @brief Get property ID for a property name
 * @param name Property name string
 * @return Property ID or PROP_COUNT if not found
 */
property_id_t get_property_id(const char *name);

/* Property accessors */
#define GALAXY_PROP_SnapNum(g) ((g)->properties->SnapNum)

#define GALAXY_PROP_Type(g) ((g)->properties->Type)

#define GALAXY_PROP_GalaxyNr(g) ((g)->properties->GalaxyNr)

#define GALAXY_PROP_CentralGal(g) ((g)->properties->CentralGal)

#define GALAXY_PROP_HaloNr(g) ((g)->properties->HaloNr)

#define GALAXY_PROP_MostBoundID(g) ((g)->properties->MostBoundID)

#define GALAXY_PROP_GalaxyIndex(g) ((g)->properties->GalaxyIndex) /* Read-only after first set */

#define GALAXY_PROP_CentralGalaxyIndex(g) ((g)->properties->CentralGalaxyIndex) /* Read-only after first set */

#define GALAXY_PROP_mergeType(g) ((g)->properties->mergeType)

#define GALAXY_PROP_mergeIntoID(g) ((g)->properties->mergeIntoID)

#define GALAXY_PROP_mergeIntoSnapNum(g) ((g)->properties->mergeIntoSnapNum)

#define GALAXY_PROP_dT(g) ((g)->properties->dT)

#define GALAXY_PROP_Pos(g) ((g)->properties->Pos)
#define GALAXY_PROP_Pos_ELEM(g, idx) ((g)->properties->Pos[idx])

#define GALAXY_PROP_Vel(g) ((g)->properties->Vel)
#define GALAXY_PROP_Vel_ELEM(g, idx) ((g)->properties->Vel[idx])

#define GALAXY_PROP_Len(g) ((g)->properties->Len)

#define GALAXY_PROP_Mvir(g) ((g)->properties->Mvir)

#define GALAXY_PROP_deltaMvir(g) ((g)->properties->deltaMvir)

#define GALAXY_PROP_CentralMvir(g) ((g)->properties->CentralMvir)

#define GALAXY_PROP_Rvir(g) ((g)->properties->Rvir)

#define GALAXY_PROP_Vvir(g) ((g)->properties->Vvir)

#define GALAXY_PROP_Vmax(g) ((g)->properties->Vmax)

#define GALAXY_PROP_ColdGas(g) ((g)->properties->ColdGas)

#define GALAXY_PROP_StellarMass(g) ((g)->properties->StellarMass)

#define GALAXY_PROP_BulgeMass(g) ((g)->properties->BulgeMass)

#define GALAXY_PROP_HotGas(g) ((g)->properties->HotGas)

#define GALAXY_PROP_EjectedMass(g) ((g)->properties->EjectedMass)

#define GALAXY_PROP_BlackHoleMass(g) ((g)->properties->BlackHoleMass)

#define GALAXY_PROP_ICS(g) ((g)->properties->ICS)

#define GALAXY_PROP_MetalsColdGas(g) ((g)->properties->MetalsColdGas)

#define GALAXY_PROP_MetalsStellarMass(g) ((g)->properties->MetalsStellarMass)

#define GALAXY_PROP_MetalsBulgeMass(g) ((g)->properties->MetalsBulgeMass)

#define GALAXY_PROP_MetalsHotGas(g) ((g)->properties->MetalsHotGas)

#define GALAXY_PROP_MetalsEjectedMass(g) ((g)->properties->MetalsEjectedMass)

#define GALAXY_PROP_MetalsICS(g) ((g)->properties->MetalsICS)

#define GALAXY_PROP_SfrDisk(g) ((g)->properties->SfrDisk)
#define GALAXY_PROP_SfrDisk_ELEM(g, idx) ((g)->properties->SfrDisk[idx])

#define GALAXY_PROP_SfrBulge(g) ((g)->properties->SfrBulge)
#define GALAXY_PROP_SfrBulge_ELEM(g, idx) ((g)->properties->SfrBulge[idx])

#define GALAXY_PROP_SfrDiskColdGas(g) ((g)->properties->SfrDiskColdGas)
#define GALAXY_PROP_SfrDiskColdGas_ELEM(g, idx) ((g)->properties->SfrDiskColdGas[idx])

#define GALAXY_PROP_SfrDiskColdGasMetals(g) ((g)->properties->SfrDiskColdGasMetals)
#define GALAXY_PROP_SfrDiskColdGasMetals_ELEM(g, idx) ((g)->properties->SfrDiskColdGasMetals[idx])

#define GALAXY_PROP_SfrBulgeColdGas(g) ((g)->properties->SfrBulgeColdGas)
#define GALAXY_PROP_SfrBulgeColdGas_ELEM(g, idx) ((g)->properties->SfrBulgeColdGas[idx])

#define GALAXY_PROP_SfrBulgeColdGasMetals(g) ((g)->properties->SfrBulgeColdGasMetals)
#define GALAXY_PROP_SfrBulgeColdGasMetals_ELEM(g, idx) ((g)->properties->SfrBulgeColdGasMetals[idx])

#define GALAXY_PROP_StarFormationHistory(g) ((g)->properties->StarFormationHistory)
#define GALAXY_PROP_StarFormationHistory_SIZE(g) ((g)->properties->StarFormationHistory_size)
#define GALAXY_PROP_StarFormationHistory_ELEM(g, idx) ((g)->properties->StarFormationHistory[idx])

int galaxy_set_StarFormationHistory_size(struct GALAXY *g, int size);

#define GALAXY_PROP_DiskScaleRadius(g) ((g)->properties->DiskScaleRadius)

#define GALAXY_PROP_MergTime(g) ((g)->properties->MergTime)

#define GALAXY_PROP_Cooling(g) ((g)->properties->Cooling)

#define GALAXY_PROP_Heating(g) ((g)->properties->Heating)

#define GALAXY_PROP_r_heat(g) ((g)->properties->r_heat)

#define GALAXY_PROP_QuasarModeBHaccretionMass(g) ((g)->properties->QuasarModeBHaccretionMass)

#define GALAXY_PROP_TimeOfLastMajorMerger(g) ((g)->properties->TimeOfLastMajorMerger)

#define GALAXY_PROP_TimeOfLastMinorMerger(g) ((g)->properties->TimeOfLastMinorMerger)

#define GALAXY_PROP_OutflowRate(g) ((g)->properties->OutflowRate)

#define GALAXY_PROP_TotalSatelliteBaryons(g) ((g)->properties->TotalSatelliteBaryons)

#define GALAXY_PROP_infallMvir(g) ((g)->properties->infallMvir)

#define GALAXY_PROP_infallVvir(g) ((g)->properties->infallVvir)

#define GALAXY_PROP_infallVmax(g) ((g)->properties->infallVmax)


#endif /* CORE_PROPERTIES_H */
