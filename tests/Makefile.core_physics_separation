# Makefile for testing core-physics separation
# This tests the core's complete independence from physics

# Directory setup
TEST_DIR := $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))
ROOT_DIR := $(shell dirname $(TEST_DIR))
SRC_DIR := $(ROOT_DIR)/src
CORE_DIR := $(SRC_DIR)/core
PHYSICS_DIR := $(SRC_DIR)/physics
IO_DIR := $(SRC_DIR)/io

# Compiler options
CC = gcc
CFLAGS = -DHDF5 -O2 -march=native -std=gnu99 -fPIC -g -Wall -Wextra
INCLUDES = -I$(ROOT_DIR) -I$(SRC_DIR) -I$(CORE_DIR) -I$(PHYSICS_DIR) -I/opt/homebrew/include
LDFLAGS = -L/opt/homebrew/lib
LIBS = -lhdf5 -lhdf5_hl -lm

# Source files for test
TEST_SOURCES = test_core_physics_separation.c
TEST_EXECUTABLE = test_core_physics_separation

# Core library files
CORE_SOURCES = $(CORE_DIR)/core_init.c \
               $(CORE_DIR)/core_logging.c \
               $(CORE_DIR)/core_mymalloc.c \
               $(CORE_DIR)/core_allvars.c \
               $(CORE_DIR)/core_module_system.c \
               $(CORE_DIR)/core_pipeline_system.c \
               $(CORE_DIR)/core_event_system.c \
               $(CORE_DIR)/core_properties.c \
               $(CORE_DIR)/standard_properties.c \
               $(CORE_DIR)/core_galaxy_extensions.c

CORE_OBJECTS = $(CORE_SOURCES:.c=.o)

# Default target
all: $(TEST_EXECUTABLE)

# Compile core objects
%.o: %.c
	$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@

# Link test executable
$(TEST_EXECUTABLE): $(TEST_SOURCES) $(CORE_OBJECTS)
	$(CC) $(CFLAGS) $(INCLUDES) -o $@ $^ $(LDFLAGS) $(LIBS)

# Run the test
run: $(TEST_EXECUTABLE)
	@echo "Testing core-physics separation..."
	./$(TEST_EXECUTABLE)

# Clean up
clean:
	@echo "Cleaning up core-physics separation test output..."
	@rm -f $(TEST_EXECUTABLE) $(CORE_OBJECTS)
	@rm -f *.o

.PHONY: all run clean
