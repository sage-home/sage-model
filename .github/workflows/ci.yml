
name: GitHub CI

on: 
  push:
  pull_request:
    branches:
    - master
  workflow_dispatch:

jobs:
  build:
    name: On ${{ matrix.os }} with (${{ matrix.compiler }}, python-${{ matrix.python-version }}, numpy-${{ matrix.numpy-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-18.04", "ubuntu-20.04", "macos-latest"]
        compiler: [gcc-5, gcc-7, gcc-9, clang]
        python-version: ["3.6", "3.7", "3.8", "3.9"]
        numpy-version: ["1.14", "1.16", "1.18", "1.20"]
        exclude:

          # Only run with 'clang' on OSX
          - os: "macos-latest"
            compiler: gcc-5
          - os: "macos-latest"
            compiler: gcc-7
          - os: "macos-latest"
            compiler: gcc-9

          # Don't use 'clang' on linux
          - os: "ubuntu-18.04"
            compiler: clang
          - os: "ubuntu-20.04"
            compiler: clang

          # no gcc-5, gcc-7 on 20.04
          - os: "ubuntu-20.04"
            compiler: gcc-5
          - os: "ubuntu-20.04"
            compiler: gcc-7

          # # no gcc-5 on 18.04
          - os: "ubuntu-18.04"
            compiler: gcc-5


          # python3.8 only on 20.04
          - os: "ubuntu-18.04"
            python-version: "3.8"
          - os: "macos-latest"
            python-version: "3.8"

          # python3.9 only on 20.04
          - os: "ubuntu-18.04"
            python-version: "3.9"
          - os: "macos-latest"
            python-version: "3.9"

          # numpy1.18 only on python3.8
          # (which, in turn, is only on '20.04')
          - python-version: "3.6"
            numpy-version: "1.18"
          - python-version: "3.7"
            numpy-version: "1.18"
          - python-version: "3.9"
            numpy-version: "1.18"

          # numpy1.20 only on python3.9
          # (which, in turn, is only on '20.04')
          - python-version: "3.6"
            numpy-version: "1.20"
          - python-version: "3.7"
            numpy-version: "1.20"
          - python-version: "3.8"
            numpy-version: "1.20"

          # numpy1.14 only on <= python3.7
          - python-version: "3.8"
            numpy-version: "1.14"
          - python-version: "3.9"
            numpy-version: "1.14"

    env:
      CC: ${{ matrix.compiler }}
      CI: true

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          auto-activate-base: false
          miniconda-version: 'latest'
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        shell: bash -l {0}
        run: |
          conda create -q --yes -n test python=${{ matrix.python-version }}
          conda activate test
          conda install -c conda-forge numpy=${{ matrix.numpy-version }} hdf5 gsl
          python -m pip install -r requirements.txt
      - name: Display PATH, compiler, python
        shell: bash -l {0}
        run: |
          conda activate test
          echo "PATH = " $PATH
          echo "COMPILER = " ${{ matrix.compiler }}
          echo "COMPILER location = " `which ${{ matrix.compiler }}`
          echo "COMPILER VERSION = " `${{ matrix.compiler }} --version`
          echo "PYTHON = " `which python`
          echo "(PYTHON, NUMPY) version = " `python -c "import sys; import numpy as np; print(sys.version); print(np.__version__);"`

      - name: compile
        shell: bash -l {0}
        run: make -r CC=${{ matrix.compiler }}

      - name: tests
        shell: bash -l {0}
        run: |
          make clean
          make tests CC=${{ matrix.compiler }}
