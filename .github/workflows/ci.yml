
name: GitHub CI

on: 
  push:
  pull_request:
    branches:
    - master
  workflow_dispatch:

jobs:
  build:
    name: On ${{ matrix.os }} with (${{ matrix.compiler }}, python-${{ matrix.python-version }}, numpy-${{ matrix.numpy-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "ubuntu-20.04"]
        compiler: [gcc-7, gcc-9, gcc-12]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        numpy-version: ["1.18", "1.20", "1.23"]
        
        include:
          - compiler: clang
            os: "macos-latest"
            python-version: "3.8"
            numpy-version: "1.18"

          - compiler: clang
            os: "macos-latest"
            python-version: "3.9"
            numpy-version: "1.20"

        exclude:
          # gcc-7 only on ubuntu-20.04
          - os: "ubuntu-latest"
            compiler: gcc-7

          # gcc-12 only on ubuntu-latest
          - os: "ubuntu-20.04"
            compiler: gcc-12

          # python3.9 only on ubuntu-latest
          - os: "ubuntu-latest"
            python-version: "3.8"

          # numpy1.18 only on python3.8
          # (which, in turn, is only on '20.04')
          - python-version: "3.11"
            numpy-version: "1.18"
          - python-version: "3.10"
            numpy-version: "1.18"
          - python-version: "3.9"
            numpy-version: "1.18"

          # numpy1.20 only on python3.9
          # (which, in turn, is only on '20.04')
          - python-version: "3.11"
            numpy-version: "1.20"
          - python-version: "3.10"
            numpy-version: "1.20"
          - python-version: "3.9"
            numpy-version: "1.20"

    env:
      CC: ${{ matrix.compiler }}
      CI: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          auto-activate-base: false
          miniconda-version: 'latest'
          python-version: ${{ matrix.python-version }}
          
      - name: Install gcc-7 on ubuntu-20.04
        shell: bash -l {0}
        if: matrix.os == 'ubuntu-20.04'
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install gcc-7
          
      - name: Install dependencies
        shell: bash -l {0}
        run: |
          conda create -q --yes -n test python=${{ matrix.python-version }}
          conda activate test
          conda install -q -c conda-forge numpy=${{ matrix.numpy-version }} hdf5 gsl
          python -m pip install -r requirements.txt
      - name: Display PATH, compiler, python
        shell: bash -l {0}
        run: |
          conda activate test
          echo "PATH = " $PATH
          echo "COMPILER = " ${{ matrix.compiler }}
          echo "COMPILER location = " `which ${{ matrix.compiler }}`
          echo "COMPILER VERSION = " `${{ matrix.compiler }} --version`
          echo "PYTHON = " `which python`
          echo "(PYTHON, NUMPY) version = " `python -c "import sys; import numpy as np; print(sys.version); print(np.__version__);"`

      - name: compile
        shell: bash -l {0}
        run: make -r CC=${{ matrix.compiler }}

      - name: tests
        shell: bash -l {0}
        run: |
          make clean
          make tests CC=${{ matrix.compiler }}
